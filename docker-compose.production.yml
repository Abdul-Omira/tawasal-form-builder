version: '3.8'

services:
  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: moct-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-secure-latest.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - secure_uploads:/var/secure-uploads:ro
      - app_uploads:/app/uploads:ro
    depends_on:
      - app
    networks:
      - ministry-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main Syrian Ministry Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: moct-app
    restart: unless-stopped
    expose:
      - "5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgres://postgres:${DB_PASSWORD}@db:5432/ministry_communication
      - SESSION_SECRET=${SESSION_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - FILE_ACCESS_SECRET=${FILE_ACCESS_SECRET}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_NAME=${ADMIN_NAME}
      - EMPLOYEE_USERNAME=${EMPLOYEE_USERNAME}
      - EMPLOYEE_PASSWORD=${EMPLOYEE_PASSWORD}
      - EMPLOYEE_NAME=${EMPLOYEE_NAME}
      - SECURE_UPLOADS_DIR=/var/secure-uploads
      - TZ=Asia/Damascus
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - secure_uploads:/var/secure-uploads
      - ./backups:/app/backups:ro
    networks:
      - ministry-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # PostgreSQL Database with Arabic Support
  db:
    image: postgres:16-alpine
    container_name: moct-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=ministry_communication
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --locale=C
      - TZ=Asia/Damascus
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - ministry-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ministry_communication"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true

  # Redis for Session Storage and Caching
  redis:
    image: redis:7-alpine
    container_name: moct-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - ministry-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    security_opt:
      - no-new-privileges:true

  # Database Backup Service
  db-backup:
    image: postgres:16-alpine
    container_name: moct-backup
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=ministry_communication
      - BACKUP_SCHEDULE=0 2 * * *
      - TZ=Asia/Damascus
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts:ro
    networks:
      - ministry-network
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        echo '${BACKUP_SCHEDULE} /scripts/backup.sh' > /var/spool/cron/crontabs/root &&
        chmod 0644 /var/spool/cron/crontabs/root &&
        crond -f -d 8
      "
    security_opt:
      - no-new-privileges:true

  # Log Aggregation
  log-aggregator:
    image: fluent/fluent-bit:latest
    container_name: moct-logs
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs:ro
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
    networks:
      - ministry-network
    depends_on:
      - app
    security_opt:
      - no-new-privileges:true

  # Security Monitor
  security-monitor:
    image: node:20-alpine
    container_name: moct-security
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:${DB_PASSWORD}@db:5432/ministry_communication
      - TZ=Asia/Damascus
    volumes:
      - ./server/security-monitor.js:/app/security-monitor.js:ro
      - app_logs:/app/logs
    networks:
      - ministry-network
    depends_on:
      db:
        condition: service_healthy
    command: node security-monitor.js
    security_opt:
      - no-new-privileges:true

networks:
  ministry-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.bridge.name: moct-bridge

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/moct-data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/moct-data/redis
  app_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/moct-data/uploads
  secure_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/moct-data/secure-uploads
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/moct-data/logs