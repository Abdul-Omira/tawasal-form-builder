# Syrian Ministry of Communication - Military-Grade Nginx Configuration
# Maximum Security Nginx Setup with Latest Standards
# Version: 3.0.0 - Emergency Security Response
# Author: Security Team

# Main nginx configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security: Hide nginx version
server_tokens off;

# Optimize worker connections
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings with security focus
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_name_in_redirect off;
    
    # Security timeouts (shorter to prevent slowloris attacks)
    keepalive_timeout 15;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Buffer size limits (prevent buffer overflow attacks)
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    client_max_body_size 10m;
    large_client_header_buffers 4 4k;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=form:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging with security focus
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '$request_time $upstream_response_time '
                          '"$http_x_forwarded_for" "$http_x_real_ip"';
    
    access_log /var/log/nginx/access.log security_log;
    
    # Gzip compression with security considerations
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
    
    # Security headers map
    map $sent_http_content_type $security_headers {
        ~*text/html "nosniff";
    }
    
    # Bot detection
    map $http_user_agent $is_bot {
        default 0;
        ~*bot 1;
        ~*crawler 1;
        ~*spider 1;
        ~*scanner 1;
        ~*curl 1;
        ~*wget 1;
        ~*python 1;
        ~*postman 1;
        ~*insomnia 1;
    }
    
    # Geo-blocking for high-risk countries (adjust as needed)
    geo $geo_block {
        default 0;
        # Add country blocks if needed
        # include /etc/nginx/blocked_countries.conf;
    }
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Main server configuration
    server {
        listen 80;
        server_name tawasal.moct.gov.sy www.tawasal.moct.gov.sy;
        
        # Security: Block suspicious requests immediately
        if ($is_bot) {
            return 403;
        }
        
        if ($geo_block) {
            return 403;
        }
        
        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS server with maximum security
    server {
        listen 443 ssl http2;
        server_name tawasal.moct.gov.sy www.tawasal.moct.gov.sy;
        
        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/tawasal.moct.gov.sy/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tawasal.moct.gov.sy/privkey.pem;
        
        # Security headers - Maximum protection
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header X-DNS-Prefetch-Control "off" always;
        add_header X-Download-Options "noopen" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(self), sync-xhr=()" always;
        
        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Content Security Policy - Very strict
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'none'; object-src 'none'; child-src 'none'; frame-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        # Bot blocking
        if ($is_bot) {
            return 403;
        }
        
        # Geo-blocking
        if ($geo_block) {
            return 403;
        }
        
        # Block common attack patterns
        location ~* \.(php|asp|aspx|jsp|cgi)$ {
            return 403;
        }
        
        # Block sensitive files
        location ~* /\.(env|git|svn|htaccess|htpasswd) {
            return 403;
        }
        
        # Block common admin paths
        location ~* ^/(admin|administrator|wp-admin|phpmyadmin|cpanel|panel|login|signin)(/|$) {
            return 403;
        }
        
        # Block SQL injection attempts
        location ~* (union.*select|drop.*table|insert.*into|delete.*from|update.*set) {
            return 403;
        }
        
        # Block XSS attempts
        location ~* (<script|javascript:|vbscript:|onload=|onerror=) {
            return 403;
        }
        
        # API rate limiting
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            # CORS headers for API
            add_header 'Access-Control-Allow-Origin' 'https://tawasal.moct.gov.sy' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # Proxy to Node.js application
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Security timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
        }
        
        # Form submission endpoints with strict rate limiting
        location ~* /api/(citizen-communications|business-submissions)$ {
            limit_req zone=form burst=2 nodelay;
            
            # Only allow POST
            if ($request_method !~ ^(POST)$) {
                return 405;
            }
            
            # Proxy to Node.js application
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Security timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 60s;
        }
        
        # Login endpoints with very strict rate limiting
        location ~* /api/(login|auth)$ {
            limit_req zone=login burst=1 nodelay;
            
            # Only allow POST
            if ($request_method !~ ^(POST)$) {
                return 405;
            }
            
            # Proxy to Node.js application
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files with security headers and caching
        location ~* \.(css|js|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
            # Security check for static files
            location ~* \.(php|asp|aspx|jsp|cgi)$ {
                return 403;
            }
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
            
            # Serve from Node.js application
            proxy_pass http://127.0.0.1:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Root and other requests
        location / {
            # Block common attack patterns
            if ($request_uri ~* "(\<|%3C).*script.*(\>|%3E)") {
                return 403;
            }
            
            if ($query_string ~* "[;'\<\>]") {
                return 403;
            }
            
            # Proxy to Node.js application
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Security timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
        }
        
        # Custom error pages
        error_page 403 /custom_403.html;
        error_page 404 /custom_404.html;
        error_page 500 502 503 504 /custom_50x.html;
        
        location = /custom_403.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /custom_404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /custom_50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # Security: Block all other server names
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        # Use self-signed certificate for default server
        ssl_certificate /etc/nginx/ssl/default.crt;
        ssl_certificate_key /etc/nginx/ssl/default.key;
        
        return 444;
    }
}

# Additional security settings
# Block specific user agents
map $http_user_agent $blocked_agents {
    default 0;
    "~*malicious" 1;
    "~*attack" 1;
    "~*sqlmap" 1;
    "~*nikto" 1;
    "~*nessus" 1;
    "~*openvas" 1;
    "~*vega" 1;
    "~*skipfish" 1;
    "~*wpscan" 1;
    "~*dirbuster" 1;
    "~*hydra" 1;
    "~*nmap" 1;
    "~*masscan" 1;
    "~*zmap" 1;
}

# Rate limiting for suspicious patterns
map $request_uri $is_suspicious {
    default 0;
    "~*\.\./\.\." 1;
    "~*/etc/passwd" 1;
    "~*/proc/" 1;
    "~*union.*select" 1;
    "~*drop.*table" 1;
    "~*<script" 1;
    "~*javascript:" 1;
    "~*vbscript:" 1;
} 